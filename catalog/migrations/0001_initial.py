# Generated by Django 3.1.3 on 2020-12-01 18:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя категории')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название игры')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Amount in Euro', max_digits=64, null=True)),
                ('status', models.CharField(default='new', max_length=30)),
                ('payment_system', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_system_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Имейл пейпал аккаунта который был использован при формировании заказа')),
            ],
        ),
        migrations.CreateModel(
            name='Label_Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaxTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_time', models.SmallIntegerField(default=0, verbose_name='Максимальное время торгов по заказу')),
            ],
            options={
                'ordering': ['max_time'],
            },
        ),
        migrations.CreateModel(
            name='OptionCheckBoxElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OptionCheckBoxFirst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('admin_name', models.CharField(default='', max_length=50, verbose_name='Имя виджета админке формата Product.admin_name_OptionCheckBoxFirst.name')),
            ],
        ),
        migrations.CreateModel(
            name='OptionCheckBoxSecond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('admin_name', models.CharField(default='', max_length=50, verbose_name='Имя виджета админке формата Product.admin_name_OptionCheckBoxSecond.name')),
            ],
        ),
        migrations.CreateModel(
            name='OptionSelectElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OptionSelectFirst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('admin_name', models.CharField(default='', max_length=50, verbose_name='Имя виджета админке формата Product.admin_name_OptionSelectFirst.name')),
            ],
        ),
        migrations.CreateModel(
            name='OptionSelectSecond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('admin_name', models.CharField(default='', max_length=50, verbose_name='Имя виджета админке формата Product.admin_name_OptionSelectSecond.name')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_system_settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название платежной системы')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Емейл в платежной системе, для пейпала это логин в пейпал акаунте')),
                ('status', models.BooleanField(default=True, verbose_name='On/Off')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange_rate', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Расчетный курс из пейпала')),
                ('markup_coefficient', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Коэффициент наценки платформы')),
                ('time_prefix', models.CharField(blank=True, default='CET', max_length=10, verbose_name='Какой префикс использовать CET/CEST')),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_order_filter', models.CharField(default='New', max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField(blank=True, null=True)),
                ('rating', models.SmallIntegerField(choices=[(1, 'Bad'), (2, 'Poor'), (3, 'Average'), (4, 'Great'), (5, 'Excellent')])),
                ('review_status', models.BooleanField(default=True, verbose_name='On/Off')),
                ('user_buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_buyer_review', to=settings.AUTH_USER_MODEL)),
                ('user_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_driver_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Product Name')),
                ('name_en', models.CharField(max_length=50, null=True, verbose_name='Product Name')),
                ('name_de', models.CharField(max_length=50, null=True, verbose_name='Product Name')),
                ('name_fr', models.CharField(max_length=50, null=True, verbose_name='Product Name')),
                ('name_es', models.CharField(max_length=50, null=True, verbose_name='Product Name')),
                ('name_ru', models.CharField(max_length=50, null=True, verbose_name='Product Name')),
                ('admin_name', models.CharField(max_length=50, verbose_name='Имя продуктак которое будет использовано для отображения в админке')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Цена')),
                ('content', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Description')),
                ('content_en', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Description')),
                ('content_de', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Description')),
                ('content_fr', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Description')),
                ('content_es', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Description')),
                ('content_ru', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Description')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Meta Tag Title')),
                ('title_en', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta Tag Title')),
                ('title_de', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta Tag Title')),
                ('title_fr', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta Tag Title')),
                ('title_es', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta Tag Title')),
                ('title_ru', models.CharField(blank=True, max_length=50, null=True, verbose_name='Meta Tag Title')),
                ('description', models.TextField(blank=True, default=None, verbose_name='Meta Tag Description')),
                ('description_en', models.TextField(blank=True, default=None, null=True, verbose_name='Meta Tag Description')),
                ('description_de', models.TextField(blank=True, default=None, null=True, verbose_name='Meta Tag Description')),
                ('description_fr', models.TextField(blank=True, default=None, null=True, verbose_name='Meta Tag Description')),
                ('description_es', models.TextField(blank=True, default=None, null=True, verbose_name='Meta Tag Description')),
                ('description_ru', models.TextField(blank=True, default=None, null=True, verbose_name='Meta Tag Description')),
                ('required_select_first', models.BooleanField(default=False, verbose_name='Обязательная или нет поле Select')),
                ('required_select_second', models.BooleanField(default=False, verbose_name='Обязательная или нет поле Select second')),
                ('required_check_box_first', models.BooleanField(default=False, verbose_name='Обязательная или нет поле Check box')),
                ('required_check_box_second', models.BooleanField(default=False, verbose_name='Обязательная или нет поле Check box second')),
                ('slug', models.SlugField(unique=True)),
                ('status', models.BooleanField(default=True, verbose_name='On/Off')),
                ('sort_order', models.SmallIntegerField(default=0, verbose_name='Sort Order')),
                ('first_label_name', models.CharField(blank=True, choices=[], default=None, max_length=100, null=True, verbose_name='Название элемента виджета label1')),
                ('second_label_name', models.CharField(blank=True, choices=[], default=None, max_length=100, null=True, verbose_name='Название элемента виджета label2')),
                ('third_label_name', models.CharField(blank=True, choices=[], default=None, max_length=100, null=True, verbose_name='Название элемента виджета label3')),
                ('fourth_label_name', models.CharField(blank=True, choices=[], default=None, max_length=100, null=True, verbose_name='Название элемента виджета label4')),
                ('fifth_label_name', models.CharField(blank=True, choices=[], default=None, max_length=100, null=True, verbose_name='Название элемента виджета label5')),
                ('schedule', models.BooleanField(default=False, verbose_name='С расписанием On/Off')),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='category_slug', to='catalog.category', verbose_name='Имя категории')),
                ('game', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='game_slug', to='catalog.game', verbose_name='Название игры')),
                ('max_time', models.ManyToManyField(blank=True, to='catalog.MaxTime', verbose_name='Максимальное время торгов по заказу')),
                ('option_check_box_first', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_checkbox', to='catalog.optioncheckboxfirst')),
                ('option_check_box_second', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_checkbox_second', to='catalog.optioncheckboxsecond')),
                ('option_select_first', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.optionselectfirst')),
                ('option_select_second', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.optionselectsecond')),
            ],
            options={
                'ordering': ['-sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_rub', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_initial', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('Processing', 'Processing'), ('Pending', 'Pending'), ('Complete', 'Complete'), ('Denied', 'Denied'), ('New', 'New'), ('Expired', 'Expired'), ('Paid', 'Paid')], default='New', max_length=10)),
                ('max_time', models.SmallIntegerField(default=0, verbose_name='Максимальное время торгов по заказу')),
                ('option_select_first', models.CharField(blank=True, max_length=200, null=True)),
                ('option_select_first_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Стоимость опции select')),
                ('option_select_second', models.CharField(blank=True, max_length=200, null=True)),
                ('option_select_second_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Стоимость опции select_second')),
                ('option_check_box_first', models.CharField(blank=True, max_length=200, null=True)),
                ('option_check_box_first_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Стоимость опции check_box')),
                ('option_check_box_second', models.CharField(blank=True, max_length=200, null=True)),
                ('option_check_box_second_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Стоимость опции check_box_second')),
                ('label_value', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Значение элементов label продукта')),
                ('label_value1', tinymce.models.HTMLField(blank=True, null=True, verbose_name='промежуточное значение')),
                ('fraction', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('schedule_value1', models.DateTimeField(blank=True, null=True)),
                ('schedule_value2', models.DateTimeField(blank=True, null=True)),
                ('schedule_value3', models.DateTimeField(blank=True, null=True)),
                ('schedule_value4', models.DateTimeField(blank=True, null=True)),
                ('schedule_value_final', models.DateTimeField(blank=True, null=True)),
                ('required_piloted', models.BooleanField(default=False)),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_invoice', to='catalog.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.product')),
                ('review', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.review', verbose_name='Review')),
                ('user_buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_buyer', to=settings.AUTH_USER_MODEL, verbose_name='Buyer')),
                ('user_driver', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_driver', to=settings.AUTH_USER_MODEL, verbose_name='Driver')),
            ],
            options={
                'verbose_name_plural': '1. Orders',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OptionSelectSecondSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('option_select', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optionselectsecond')),
                ('option_select_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optionselectelement')),
            ],
        ),
        migrations.AddField(
            model_name='optionselectsecond',
            name='elements',
            field=models.ManyToManyField(blank=True, related_name='option_check_box_element_second', through='catalog.OptionSelectSecondSummary', to='catalog.OptionSelectElement'),
        ),
        migrations.CreateModel(
            name='OptionSelectFirstSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('option_select', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optionselectfirst')),
                ('option_select_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optionselectelement')),
            ],
        ),
        migrations.AddField(
            model_name='optionselectfirst',
            name='elements',
            field=models.ManyToManyField(blank=True, related_name='option_check_box_element_first', through='catalog.OptionSelectFirstSummary', to='catalog.OptionSelectElement'),
        ),
        migrations.CreateModel(
            name='OptionCheckBoxSecondSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('option_check_box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optioncheckboxsecond')),
                ('option_check_box_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optioncheckboxelement')),
            ],
        ),
        migrations.AddField(
            model_name='optioncheckboxsecond',
            name='elements',
            field=models.ManyToManyField(blank=True, related_name='option_check_box_elements_second', through='catalog.OptionCheckBoxSecondSummary', to='catalog.OptionCheckBoxElement'),
        ),
        migrations.CreateModel(
            name='OptionCheckBoxFirstSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('option_check_box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optioncheckboxfirst')),
                ('option_check_box_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.optioncheckboxelement')),
            ],
        ),
        migrations.AddField(
            model_name='optioncheckboxfirst',
            name='elements',
            field=models.ManyToManyField(blank=True, related_name='option_check_box_elements_first', through='catalog.OptionCheckBoxFirstSummary', to='catalog.OptionCheckBoxElement'),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_done_orders', models.SmallIntegerField(default=0, verbose_name='Итого заказов выполненое Драйвером')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=3, null=True, verbose_name='Рейтинг драйвера')),
                ('can_do_piloted', models.BooleanField(default=False, verbose_name='Может ли драйвер делать заказы в режиме Piloted')),
                ('user_driver', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_driver_in_driver_acc', to=settings.AUTH_USER_MODEL, verbose_name='Driver')),
            ],
        ),
        migrations.CreateModel(
            name='BidedOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_rub', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('schedule_value1', models.DateTimeField(blank=True, null=True)),
                ('schedule_value2', models.DateTimeField(blank=True, null=True)),
                ('schedule_value3', models.DateTimeField(blank=True, null=True)),
                ('schedule_value4', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bid_order', to='catalog.order')),
                ('user_driver', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Driver')),
            ],
        ),
    ]
